{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Final","props","state","btns","name","value","copy","removed","disabled","setKeyword","keyword","search","index","item","btnToCheck","document","getElementById","iconToCheck","iconToCheck1","style","display","itemName","itemIndex","this","indexOf","setState","splice","concat","e","map","i","letter","toLowerCase","console","log","class","placeholder","onChange","target","onClick","toggle","id","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","item3","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d7d164b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Component} from 'react';\r\nimport './App.css';\r\nclass Final extends Component {\r\nconstructor(props){\r\nsuper(props);\r\nthis.state={\r\nbtns:[\r\n{name :\"Budget \",\r\nvalue:1 \r\n},\r\n{name :\"Food allergies  \",\r\nvalue:2\r\n},\r\n{name :\"Number of people  \",\r\nvalue:3\r\n},\r\n{name :\"Special restrictions \",\r\nvalue:4\r\n}\r\n],\r\ncopy:[],\r\nremoved:[],\r\ndisabled:true,\r\nsetKeyword:\"\",\r\nkeyword:\"\",\r\nsearch:\"\",\r\n};\r\n}\r\ntoggle(index,item){\r\nvar btnToCheck=document.getElementById(`btn${index}`);\r\nvar iconToCheck=document.getElementById(`icon${index}`);\r\nvar iconToCheck1=document.getElementById(`icon1${index}`);\r\niconToCheck.style.display='none'\r\niconToCheck1.style.display='none'\r\nif(!btnToCheck.disabled){\r\niconToCheck1.style.display='inline-block'\r\niconToCheck.style.display='none'\r\nbtnToCheck.disabled=true;\r\nthis.setState({\r\ncopy:this.state.copy.concat(this.state.btns[index].name),\r\n})\r\n}\r\nelse {\r\niconToCheck.style.display='inline-block'\r\niconToCheck1.style.display='none'\r\nvar itemName = item.name;\r\nvar itemIndex = this.state.copy.indexOf(itemName)\r\nbtnToCheck.disabled=false\r\nthis.setState({\r\nremoved:this.state.copy.splice(itemIndex,1)\r\n})\r\n}\r\n}\r\nsetKeyword(e){\r\nthis.setState({\r\nkeyword:e\r\n}) \r\nthis.state.btns.map((item,i)=>{\r\nvar letter=item.name[0].toLowerCase();\r\n\r\nvar input =e;\r\nif(letter==e){\r\nthis.setState({\r\nsearch:this.state.btns[i].name\r\n})\r\n}\r\nelse {console.log(\"no-match\")}\r\n})\r\n}\r\nrender(){\r\nreturn(\r\n<div class=\"out-container\">\r\n   <div class=\"inner_class\" >\r\n      <div class=\"input\">\r\n         <input \r\n         class=\"input\"\r\n         key=\"random1\"\r\n         value={this.state.keyword}\r\n         placeholder={\"search questions\"}\r\n         onChange={(e) =>this. setKeyword(e.target.value)}\r\n         ></input>\r\n      </div>\r\n      {\r\n      this.state.btns.map((item,i)=>\r\n      <div class=\"in-inner\"  onClick={()=>\r\n         {this.toggle(i,item);\r\n         }\r\n         }  >\r\n         <button  id={\"btn\"+i} class=\"btn\" key={item.value} value={item.name}>\r\n            <p> {item.name}</p>\r\n            <svg class=\"icon\"  xmlns=\"http://www.w3.org/2000/svg\" id={\"icon\"+i} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 6v6m0 0v6m0-6h6m-6 0H1\" />\r\n            </svg>\r\n            <svg class=\"icon\" style={{display:'none'}} xmlns=\"http://www.w3.org/2000/svg\" id={\"icon1\"+i} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M1 10l2 5L15 7\" />\r\n            </svg>\r\n         </button>\r\n      </div>\r\n      )\r\n      }\r\n   </div>\r\n   <h3>Selected Items :</h3>\r\n   <div class=\"second-div \">\r\n      {this.state.copy.map((item3,i)=>\r\n      <li value={item3}>{item3} {i}</li>\r\n      )}\r\n   </div>\r\n   {\"search : \"+this.state.search}\r\n\r\n</div>\r\n);\r\n}\r\n}\r\nexport default Final;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}